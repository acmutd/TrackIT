{"id":"X1jD","dependencies":[{"name":"/Users/sivampatel/Documents/TrackIT/package.json","includedInParent":true,"mtime":1589920917864},{"name":"/Users/sivampatel/Documents/TrackIT/node_modules/draft-js/package.json","includedInParent":true,"mtime":1589298120114},{"name":"./getFragmentFromSelection","loc":{"line":13,"column":39},"parent":"/Users/sivampatel/Documents/TrackIT/node_modules/draft-js/lib/editOnCopy.js","resolved":"/Users/sivampatel/Documents/TrackIT/node_modules/draft-js/lib/getFragmentFromSelection.js"}],"generated":{"js":"\"use strict\";var t=require(\"./getFragmentFromSelection\");function e(e,r){e._latestEditorState.getSelection().isCollapsed()?r.preventDefault():e.setClipboard(t(e._latestEditorState))}module.exports=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":11,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":13,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":13,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":13,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":13,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":21,"column":0},"generated":{"line":1,"column":57}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":21,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":21,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":21,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":22,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":22,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":23,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":25,"column":0},"generated":{"line":1,"column":109}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":26,"column":0},"generated":{"line":1,"column":123}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":26,"column":0},"generated":{"line":1,"column":125}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":142}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":144}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":157}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":159}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":30,"column":0},"generated":{"line":1,"column":161}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":182}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":189}},{"source":"node_modules/draft-js/lib/editOnCopy.js","original":{"line":33,"column":0},"generated":{"line":1,"column":197}}],"sources":{"node_modules/draft-js/lib/editOnCopy.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar getFragmentFromSelection = require(\"./getFragmentFromSelection\");\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\n\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;"},"lineCount":null}},"error":null,"hash":"b9fdbf93d6c3e45000568bd395b02789","cacheData":{"env":{}}}