{"id":"vflL","dependencies":[{"name":"/Users/sivampatel/Documents/TrackIT/package.json","includedInParent":true,"mtime":1589920917864},{"name":"/Users/sivampatel/Documents/TrackIT/node_modules/fbjs/package.json","includedInParent":true,"mtime":1589298120113}],"generated":{"js":"\"use strict\";var r=function(r){if(void 0===r)throw new Error(\"invariant(...): Second argument must be a string.\")};function n(n,e){for(var i=arguments.length,o=new Array(i>2?i-2:0),t=2;t<i;t++)o[t-2]=arguments[t];if(r(e),!n){var a;if(void 0===e)a=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var f=0;(a=new Error(e.replace(/%s/g,function(){return String(o[f++])}))).name=\"Invariant Violation\"}throw a.framesToPop=1,a}}module.exports=n;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":9,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":11,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/fbjs/lib/invariant.js","name":"validateFormat","original":{"line":11,"column":4},"generated":{"line":1,"column":17}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":11,"column":84},"generated":{"line":1,"column":19}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":11,"column":94},"generated":{"line":1,"column":28}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":12,"column":6},"generated":{"line":1,"column":31}},{"source":"node_modules/fbjs/lib/invariant.js","name":"undefined","original":{"line":12,"column":17},"generated":{"line":1,"column":39}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":12,"column":6},"generated":{"line":1,"column":43}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":13,"column":10},"generated":{"line":1,"column":45}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":13,"column":10},"generated":{"line":1,"column":51}},{"source":"node_modules/fbjs/lib/invariant.js","name":"Error","original":{"line":13,"column":14},"generated":{"line":1,"column":55}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":13,"column":20},"generated":{"line":1,"column":61}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":26,"column":0},"generated":{"line":1,"column":115}},{"source":"node_modules/fbjs/lib/invariant.js","name":"invariant","original":{"line":26,"column":9},"generated":{"line":1,"column":124}},{"source":"node_modules/fbjs/lib/invariant.js","name":"condition","original":{"line":26,"column":19},"generated":{"line":1,"column":126}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":26,"column":30},"generated":{"line":1,"column":128}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":7},"generated":{"line":1,"column":131}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":7},"generated":{"line":1,"column":135}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_len","original":{"line":27,"column":11},"generated":{"line":1,"column":139}},{"source":"node_modules/fbjs/lib/invariant.js","name":"arguments","original":{"line":27,"column":18},"generated":{"line":1,"column":141}},{"source":"node_modules/fbjs/lib/invariant.js","name":"length","original":{"line":27,"column":28},"generated":{"line":1,"column":151}},{"source":"node_modules/fbjs/lib/invariant.js","name":"args","original":{"line":27,"column":36},"generated":{"line":1,"column":158}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":43},"generated":{"line":1,"column":160}},{"source":"node_modules/fbjs/lib/invariant.js","name":"Array","original":{"line":27,"column":47},"generated":{"line":1,"column":164}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_len","original":{"line":27,"column":53},"generated":{"line":1,"column":170}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":60},"generated":{"line":1,"column":172}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_len","original":{"line":27,"column":64},"generated":{"line":1,"column":174}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":71},"generated":{"line":1,"column":176}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":75},"generated":{"line":1,"column":178}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_key","original":{"line":27,"column":79},"generated":{"line":1,"column":181}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":27,"column":86},"generated":{"line":1,"column":183}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_key","original":{"line":27,"column":89},"generated":{"line":1,"column":185}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_len","original":{"line":27,"column":96},"generated":{"line":1,"column":187}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_key","original":{"line":27,"column":102},"generated":{"line":1,"column":189}},{"source":"node_modules/fbjs/lib/invariant.js","name":"args","original":{"line":28,"column":4},"generated":{"line":1,"column":193}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_key","original":{"line":28,"column":9},"generated":{"line":1,"column":195}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":28,"column":16},"generated":{"line":1,"column":197}},{"source":"node_modules/fbjs/lib/invariant.js","name":"arguments","original":{"line":28,"column":21},"generated":{"line":1,"column":200}},{"source":"node_modules/fbjs/lib/invariant.js","name":"_key","original":{"line":28,"column":31},"generated":{"line":1,"column":210}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":33,"column":6},"generated":{"line":1,"column":213}},{"source":"node_modules/fbjs/lib/invariant.js","name":"validateFormat","original":{"line":31,"column":2},"generated":{"line":1,"column":216}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":31,"column":17},"generated":{"line":1,"column":218}},{"source":"node_modules/fbjs/lib/invariant.js","name":"condition","original":{"line":33,"column":7},"generated":{"line":1,"column":222}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":33,"column":18},"generated":{"line":1,"column":224}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":34,"column":8},"generated":{"line":1,"column":225}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":34,"column":8},"generated":{"line":1,"column":229}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":36,"column":8},"generated":{"line":1,"column":231}},{"source":"node_modules/fbjs/lib/invariant.js","name":"undefined","original":{"line":36,"column":19},"generated":{"line":1,"column":239}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":36,"column":8},"generated":{"line":1,"column":243}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":37,"column":6},"generated":{"line":1,"column":245}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":37,"column":14},"generated":{"line":1,"column":247}},{"source":"node_modules/fbjs/lib/invariant.js","name":"Error","original":{"line":37,"column":18},"generated":{"line":1,"column":251}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":37,"column":24},"generated":{"line":1,"column":257}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":38,"column":11},"generated":{"line":1,"column":390}},{"source":"node_modules/fbjs/lib/invariant.js","name":"argIndex","original":{"line":39,"column":10},"generated":{"line":1,"column":391}},{"source":"node_modules/fbjs/lib/invariant.js","name":"argIndex","original":{"line":39,"column":10},"generated":{"line":1,"column":395}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":39,"column":21},"generated":{"line":1,"column":397}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":40,"column":6},"generated":{"line":1,"column":400}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":40,"column":14},"generated":{"line":1,"column":402}},{"source":"node_modules/fbjs/lib/invariant.js","name":"Error","original":{"line":40,"column":18},"generated":{"line":1,"column":406}},{"source":"node_modules/fbjs/lib/invariant.js","name":"format","original":{"line":40,"column":24},"generated":{"line":1,"column":412}},{"source":"node_modules/fbjs/lib/invariant.js","name":"replace","original":{"line":40,"column":31},"generated":{"line":1,"column":414}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":40,"column":39},"generated":{"line":1,"column":422}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":40,"column":46},"generated":{"line":1,"column":428}},{"source":"node_modules/fbjs/lib/invariant.js","name":"String","original":{"line":41,"column":15},"generated":{"line":1,"column":439}},{"source":"node_modules/fbjs/lib/invariant.js","name":"String","original":{"line":41,"column":15},"generated":{"line":1,"column":446}},{"source":"node_modules/fbjs/lib/invariant.js","name":"args","original":{"line":41,"column":22},"generated":{"line":1,"column":453}},{"source":"node_modules/fbjs/lib/invariant.js","name":"argIndex","original":{"line":41,"column":27},"generated":{"line":1,"column":455}},{"source":"node_modules/fbjs/lib/invariant.js","name":"name","original":{"line":43,"column":12},"generated":{"line":1,"column":465}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":43,"column":19},"generated":{"line":1,"column":470}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":48,"column":10},"generated":{"line":1,"column":492}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":46,"column":4},"generated":{"line":1,"column":498}},{"source":"node_modules/fbjs/lib/invariant.js","name":"framesToPop","original":{"line":46,"column":10},"generated":{"line":1,"column":500}},{"source":"node_modules/fbjs/lib/invariant.js","original":{"line":46,"column":24},"generated":{"line":1,"column":512}},{"source":"node_modules/fbjs/lib/invariant.js","name":"error","original":{"line":48,"column":10},"generated":{"line":1,"column":514}},{"source":"node_modules/fbjs/lib/invariant.js","name":"module","original":{"line":52,"column":0},"generated":{"line":1,"column":517}},{"source":"node_modules/fbjs/lib/invariant.js","name":"exports","original":{"line":52,"column":7},"generated":{"line":1,"column":524}},{"source":"node_modules/fbjs/lib/invariant.js","name":"invariant","original":{"line":52,"column":17},"generated":{"line":1,"column":532}}],"sources":{"node_modules/fbjs/lib/invariant.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar validateFormat = process.env.NODE_ENV !== \"production\" ? function (format) {} : function (format) {\n  if (format === undefined) {\n    throw new Error('invariant(...): Second argument must be a string.');\n  }\n};\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return String(args[argIndex++]);\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // Skip invariant's own stack frame.\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;"},"lineCount":null}},"error":null,"hash":"a2fe89e468eeb67114ed033ffd0063c2","cacheData":{"env":{"NODE_ENV":"production"}}}